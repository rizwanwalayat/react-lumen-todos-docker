{"version":3,"sources":["components/Todo.js","components/AddTodo.js","components/Todos.js","actions/authActions.js","components/Navbar.js","components/auth/Login.js","components/auth/Register.js","components/auth/Logout.js","components/EditTodo.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["Todo","props","state","id","title","due_at","editing","startDate","Date","handleChange","e","setState","target","value","handleSubmit","preventDefault","doneEdit","todo","this","editTodo","markTodo","deleteTodo","now","moment","format","className","type","checked","status","onChange","onSubmit","onBlur","onDoubleClick","toggleEdit","description","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","onClick","to","Component","AddTodo","addTodo","Todos","todos","axios","patch","then","res","map","stateTodo","catch","error","console","log","delete","filter","post","data","defaults","headers","common","token","get","setUser","name","todoList","length","key","connect","dispatch","user","isLoggedIn","withRouter","Login","login","username","password","access_token","grant_type","client_id","client_secret","setToken","history","push","htmlFor","Register","register","email","Logout","destroyToken","EditTodo","match","params","todo_id","changeDate","date","due_date","changeTitle","changeDescription","selected","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","placeholderText","deleteDate","App","baseURL","exact","path","component","Boolean","window","location","hostname","initState","localStorage","getItem","loggedUser","rootReducer","action","setItem","removeItem","newPosts","posts","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.560d7f9f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Moment from 'react-moment'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nclass Todo extends Component {\r\n    state = {\r\n        id: null,\r\n        title: \"\",\r\n        due_at: \"\",\r\n        editing: false,\r\n        startDate: new Date()\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: props.todo.id,\r\n            title: props.todo.title,\r\n            due_at: props.todo.due_at,\r\n            editing: false,\r\n        }\r\n     }\r\n    \r\n    toggleEdit(){\r\n        this.setState({\r\n            editing: true\r\n        })\r\n    }\r\n    doneEdit(){\r\n        this.setState({\r\n            editing: false\r\n        })\r\n        this.props.editTodo(this.state);   \r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.doneEdit();\r\n    }\r\n   \r\n    render() {\r\n        const {todo, markTodo, deleteTodo} = this.props;\r\n        const calendarStrings = {\r\n            lastDay : '[Yesterday]',\r\n            sameDay : '[Today,] LT',\r\n            nextDay : '[Tomorrow,] LT',\r\n            lastWeek : '[last] dddd',\r\n            nextWeek : 'dddd[,] LT ',\r\n            sameElse : 'L, LT'\r\n        };   \r\n        const now = moment().format('YYYY-MM-DD HH:mm:ss');            \r\n\r\n       \r\n        return (\r\n            \r\n            <li className=\"collection-item avatar\">\r\n                <label className=\"circle\">\r\n                    <input type=\"checkbox\" className=\"\" checked={todo.status === \"Completed\"? \"checked\" : \"\"} onChange={() => markTodo(todo)}/>\r\n                    <span></span>\r\n                </label>\r\n                {(!this.state.editing) ? <p className={\"title \"+(todo.status === \"Completed\"? \"completed\" : \"\")} onDoubleClick={() => this.toggleEdit()}>{this.state.title}</p> : <form onSubmit={this.handleSubmit}><input type=\"text\" onChange={this.handleChange} onBlur={() => this.doneEdit()} value={this.state.title}/></form> }\r\n                \r\n                <p className=\"grey-text text-darken-1\">{todo.description}</p>\r\n                {todo.due_at ? <button className={\"datetime waves-effect waves-light btn grey lighten-4 btn-flat \"+(todo.due_at<now ? \"red-text text-darken-1\" : \"teal-text\")}><i className=\"material-icons left\">today</i><Moment className =\"grey-text text-darken-2\" calendar={calendarStrings}>{todo.due_at}</Moment></button> : \"\" }\r\n                <i className=\"delete-btn secondary-content small material-icons red-text text-lighten-2 right\" onClick={() => deleteTodo(todo.id)}>delete_forever</i>                    \r\n                <Link to={\"/todos/edit/\"+todo.id} className=\"edit-btn small material-icons grey-text right\">edit</Link> \r\n                \r\n               \r\n            </li>\r\n        )\r\n               \r\n    }\r\n}\r\n\r\n\r\nexport default Todo;","import React, {Component} from 'react'\r\n\r\nclass AddTodo extends Component {\r\n    state = {\r\n        title: \"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state);\r\n        this.setState({\r\n            title:\"\"\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n           <div>\r\n               <form onSubmit={this.handleSubmit}>\r\n                <label>Add New Todo:</label>\r\n                   <input type=\"text\" onChange={this.handleChange} value={this.state.title}/>\r\n               </form>\r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo","import React, { Component } from 'react'\r\nimport Todo from './Todo'\r\nimport AddTodo from './AddTodo'\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios'\r\nimport { setUser } from '../actions/authActions'\r\n\r\n\r\n\r\nclass Todos extends Component {\r\n    state = {\r\n        todos: [\r\n          ]\r\n    };\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      axios.defaults.headers.common['Authorization'] = 'Bearer '+ props.token;\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/todos/')\r\n        .then(res => {\r\n            this.setState({\r\n                todos: res.data.filter(todo => {\r\n                  return (todo.status !== 'Deleted')\r\n                })\r\n            })\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        })\r\n\r\n        axios.get('/user')\r\n        .then(res => {\r\n          this.props.setUser(res.data.name);\r\n           \r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        })\r\n\r\n\r\n      } \r\n\r\n      markTodo = (todo) =>{\r\n        const status = (todo.status === \"Active\" ? \"Completed\" : \"Active\");\r\n        axios.patch('/todos/'+todo.id, {\r\n            status\r\n          })\r\n          .then(res => {\r\n            this.setState({\r\n                todos: this.state.todos.map(stateTodo => {\r\n                  if (stateTodo.id === todo.id)\r\n                      stateTodo.status = status;\r\n                  \r\n                  return stateTodo;\r\n                })\r\n              })\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          })\r\n      }\r\n    \r\n      editTodo = (todo) =>{ \r\n        console.log(todo)\r\n        axios.patch('/todos/'+todo.id, {\r\n          title: todo.title,\r\n        })\r\n        .then(res => {\r\n            this.setState({\r\n                todos: this.state.todos.map(stateTodo => {\r\n                  if (stateTodo.id === todo.id){\r\n                  stateTodo.title = todo.title;\r\n                }\r\n                return stateTodo;\r\n                })\r\n              })\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        })\r\n      }\r\n    \r\n      deleteTodo = (id) =>{\r\n        axios.delete('/todos/'+id)\r\n          .then(res => {\r\n              this.setState({\r\n                  todos: this.state.todos.filter(todo => {\r\n                    return (todo.id !== id)\r\n                  })\r\n                })\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          })\r\n      }\r\n    \r\n      addTodo = (todo) => {\r\n        axios.post('/todos/', {\r\n          title: todo.title,\r\n        })\r\n        .then(res => {\r\n          let todos = [...this.state.todos, res.data]\r\n          this.setState({\r\n            todos\r\n          })\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        })\r\n      }\r\n      \r\n    render(){\r\n        const todoList = this.state.todos.length ? (\r\n            this.state.todos.map(todo => {\r\n                return (\r\n                    <Todo todo={todo} key={todo.id} markTodo={this.markTodo} editTodo={this.editTodo} deleteTodo={this.deleteTodo}/>\r\n                )\r\n            })\r\n        ) : (\r\n            <p className=\"center\">You have no Todos</p>\r\n        );\r\n\r\n        return (\r\n                <ul className=\"todos collection\">\r\n                    <AddTodo addTodo={this.addTodo}/>\r\n\r\n                    {todoList}\r\n                </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      token: state.token\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      setUser: (user) => { dispatch(setUser(user))},\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos)","export const setToken = (token) => {\r\n    return {\r\n        type: 'SET_TOKEN',\r\n        token\r\n    }\r\n}\r\nexport const setUser = (user) => {\r\n    return {\r\n        type: 'SET_USER',\r\n        user\r\n    }\r\n}\r\n\r\nexport const destroyToken = () => {\r\n    return {\r\n        type: 'DESTROY_TOKEN',\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => {\r\n    return {\r\n        type: 'DELETE_POST',\r\n        id\r\n    }\r\n}\r\n"," import React from 'react'\r\n import { NavLink, withRouter } from 'react-router-dom'\r\n import { connect } from 'react-redux';\r\n\r\n const Navbar = ({isLoggedIn, user}) => {\r\n    \r\n     return (\r\n         <nav>\r\n             <div className=\"nav-wrapper teal lighten-1\">\r\n                <NavLink to=\"/\" className=\"brand-logo\">React Lumen Todo</NavLink>                   \r\n                    { \r\n                        (isLoggedIn) \r\n                    ?   <ul id=\"nav-mobile\" className=\"right\">\r\n                            <li>Welcome, {user}</li>\r\n                            <li><NavLink to=\"/Todos\">Todos</NavLink></li>\r\n                            <li><NavLink to=\"/logout\">Logout</NavLink></li>\r\n                        </ul>\r\n                    :   <ul id=\"nav-mobile\" className=\"right\">\r\n                            <li><NavLink to=\"/login\">Login</NavLink></li>\r\n                            <li><NavLink to=\"/register\">Register</NavLink></li>\r\n                        </ul>\r\n                    }\r\n                 \r\n             </div>\r\n         </nav>\r\n        \r\n     )\r\n }\r\n const mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.isLoggedIn,\r\n        token: state.token,\r\n        user: state.user\r\n    }\r\n}\r\n\r\n export default connect(mapStateToProps)(withRouter(Navbar))","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios'\r\nimport { setToken } from '../../actions/authActions'\r\n\r\n\r\nclass Login extends Component {\r\n    login = (e) => {\r\n        e.preventDefault();\r\n        const username = e.target.username.value;\r\n        const password = e.target.password.value;\r\n        let access_token = \"\"\r\n        axios.post('/oauth/token/', {\r\n            grant_type: 'password',\r\n            client_id: 2,\r\n            client_secret: 'oVt1470lwqJGaOOk4EFOYtJid0qsa7VIgAoG5iL5',\r\n            username: username,\r\n            password: password\r\n          })\r\n          .then(res => {\r\n            access_token = res.data.access_token;\r\n            this.props.setToken(access_token);\r\n            this.props.history.push('/todos');\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          })\r\n        \r\n    }\r\n   \r\n    render(){\r\n     \r\n        return(\r\n            <div className=\"container\">\r\n            <h4 className=\"center\">Login</h4>\r\n            <div className=\"row\">\r\n                <form className=\"col s12\" onSubmit={this.login}>\r\n                                \r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                        <input id=\"username\" type=\"email\" className=\"validate\" />\r\n                        <label htmlFor=\"username\">Email</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                    <input id=\"password\" type=\"password\" className=\"validate\" />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Login\r\n                    <i className=\"material-icons right\"></i>\r\n                </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setToken: (token) => { dispatch(setToken(token))},\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React, {Component} from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\nclass Register extends Component {\r\n    register = (e) => {\r\n        e.preventDefault();\r\n        const name = e.target.name.value;\r\n        const email = e.target.email.value;\r\n        const password = e.target.password.value;\r\n        axios.post('/register', {\r\n            name: name,\r\n            email: email,\r\n            password: password\r\n          })\r\n          .then(res => {\r\n            this.props.history.push('/login');\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          })\r\n        \r\n    }\r\n   \r\n    render(){\r\n     \r\n        return(\r\n            <div className=\"container\">\r\n            <h4 className=\"center\">Register</h4>\r\n            <div className=\"row\">\r\n                <form className=\"col s12\" onSubmit={this.register}>\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                        <input id=\"name\" type=\"text\" className=\"validate\" />\r\n                        <label htmlFor=\"name\">Name</label>\r\n                    </div>\r\n                </div>\r\n              \r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                        <input id=\"email\" type=\"email\" className=\"validate\" />\r\n                        <label htmlFor=\"email\">Email</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                    <input id=\"password\" type=\"password\" className=\"validate\" />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Create Account\r\n                    <i className=\"material-icons right\"></i>\r\n                </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Register","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport { destroyToken } from '../../actions/authActions'\r\n\r\n\r\n\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        const {props} = this;\r\n        axios.post('/logout', '', { headers: {\r\n            'Authorization' : `Bearer ${this.props.token}`\r\n        }})\r\n          .then(res => {\r\n            props.destroyToken();\r\n           \r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            props.destroyToken();\r\n    \r\n          })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        destroyToken: () => { dispatch(destroyToken())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout)\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass EditTodo extends Component {\r\n    state = {\r\n        id: this.props.match.params.todo_id,\r\n        title: \"\",\r\n        description: null,\r\n        due_at: null,\r\n    };\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        axios.defaults.headers.common['Authorization'] = 'Bearer '+ props.token;\r\n      }\r\n  \r\n    componentDidMount(){\r\n        let id = this.state.id;\r\n        axios.get('/todos/'+id)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                id: res.data.id,\r\n                title: res.data.title,\r\n                description: res.data.description,\r\n                due_at: res.data.due_at,\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n          })\r\n    }\r\n\r\n    editTodo = (e) => {\r\n        e.preventDefault();\r\n        axios.patch('/todos/'+this.state.id, {\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            due_at: this.state.due_at\r\n        })\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n          })\r\n    }\r\n    changeDate = (date) => {\r\n        var due_date = moment(date).format('YYYY-MM-DD HH:mm:ss');            \r\n        this.setState({\r\n            due_at: due_date\r\n        })\r\n    }\r\n    changeTitle = (e) => {\r\n        this.setState({\r\n            title: e.target.value\r\n        })\r\n    }\r\n    changeDescription = (e) => {\r\n        this.setState({\r\n            description: e.target.value\r\n        })\r\n    }\r\n    deleteDate(){\r\n        this.setState({\r\n            due_at: null\r\n        })\r\n    }\r\n    render(){\r\n    \r\n        const todo = this.state.title ? (\r\n            <div>\r\n                <div className=\"section\">\r\n                <Link to={\"/todos/\"}><i className=\"medium material-icons grey-text left\">arrow_back</i></Link> \r\n                </div>\r\n                <div className=\"container\">\r\n            \r\n                    <div className=\"row\">\r\n                        <form className=\"col s12\" onSubmit={this.editTodo}>\r\n                        <h4 className=\"center\">Todo Item</h4>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                            <input id=\"title\" type=\"text\" className=\"validate\" onChange={this.changeTitle} value={this.state.title} />\r\n                            <label htmlFor=\"title\" className=\"active\">Title</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                            <input id=\"description\" type=\"text\" className=\"validate\" onChange={this.changeDescription} value={this.state.description ? this.state.description : \"\" }/>\r\n                            <label htmlFor=\"description\" className={ this.state.description ? \"active\" : \"\" }>Description</label>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <DatePicker\r\n                                    selected={this.state.due_at ? new Date(this.state.due_at) : \"\" }\r\n                                    onChange={date => this.changeDate(date)}\r\n                                    // customInput={<ExampleCustomInput />}\r\n                                    showTimeSelect\r\n                                    timeFormat=\"HH:mm\"\r\n                                    timeIntervals={30}\r\n                                    timeCaption=\"time\"\r\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                    placeholderText=\"Add date/time\"\r\n                                    />\r\n                                {this.state.due_at ? <i className=\"deletedate-btn small material-icons prefix red-text text-lighten-2 \" onClick={() => this.deleteDate()}>close</i> : \"\" } \r\n                                    \r\n                            </div>\r\n                        </div>\r\n                        <button className=\"btn waves-effect waves-light\" onClick={this.editTodo}>Update\r\n                            <i className=\"material-icons right\"></i>\r\n                        </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n        :\r\n        (<div className=\"center\">Loading post...</div>)\r\n\r\n        return (\r\n            <div className=\"container\">\r\n               {todo}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.token\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps)(EditTodo)\r\n","import React, { Component } from 'react';\nimport Todos from './components/Todos'\nimport Navbar from './components/Navbar'\nimport { Redirect, BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Login from './components/auth/Login'\nimport Register from './components/auth/Register'\nimport Logout from './components/auth/Logout'\nimport EditTodo from './components/EditTodo'\nimport axios from 'axios'\nimport {connect} from 'react-redux'\n\n\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    axios.defaults.baseURL = 'http://localhost:8000';\n  }\n  render(){\n    const isLoggedIn = this.props.isLoggedIn;\n    return (\n      <BrowserRouter>\n        <div className=\"App container\">\n          <Navbar/>\n          <Switch>\n            <Route exact path=\"/\"> {isLoggedIn ? <Redirect to=\"/todos\" /> : <Redirect to=\"/login\" />}</Route>\n            <Route exact path='/todos'> {isLoggedIn ? <Todos /> : <Redirect to=\"/login\"/>}</Route>\n            <Route path='/todos/edit/:todo_id' component={isLoggedIn ? EditTodo : Login} /> \n            <Route path=\"/login\"> {isLoggedIn ? <Redirect to=\"/todos\" /> : <Login />}</Route>\n            <Route path=\"/logout\"> {isLoggedIn ? <Logout/> : <Redirect to=\"/login\"/>}</Route>\n\n            <Route path='/register' component={Register} />\n          </Switch>\n\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      isLoggedIn: state.isLoggedIn\n  }\n}\n\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst initState = {\r\n    token: localStorage.getItem('access_token') || null,\r\n    isLoggedIn: localStorage.getItem('isLoggedIn') || false,\r\n    loggedUser: localStorage.getItem('loggedUser') || null,\r\n}\r\nconst rootReducer = (state = initState, action) => {\r\n    if(action.type === 'SET_TOKEN') {\r\n\r\n        localStorage.setItem('access_token', action.token);\r\n        localStorage.setItem('isLoggedIn', true);\r\n        return  {\r\n            ...state,\r\n            token: action.token,\r\n            isLoggedIn: true\r\n        }\r\n    }\r\n    else if(action.type === 'SET_USER') {\r\n\r\n        localStorage.setItem('access_token', action.user);\r\n        return  {\r\n            ...state,\r\n            user: action.user,\r\n        }\r\n    }\r\n    else if(action.type === 'DESTROY_TOKEN') {\r\n\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('isLoggedIn');\r\n        localStorage.removeItem('loggedUser');\r\n\r\n        return  {\r\n            ...state,\r\n            token: null,\r\n            isLoggedIn: false,\r\n            loggedUser: null\r\n        }\r\n    }\r\n    else if(action.type === 'DELETE_POST') {\r\n        let newPosts = state.posts.filter(post => post.id !== action.id);\r\n\r\n        return {\r\n            ...state,\r\n            posts: newPosts\r\n        }\r\n    }    \r\n\r\n    return state;\r\n}\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './reducers/rootReducer'; \n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}