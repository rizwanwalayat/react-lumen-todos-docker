{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react_api_todo\\\\todoapp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Todos from './components/Todos';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Logout from './components/auth/Logout';\nimport Post from './components/Post';\nimport EditTodo from './components/EditTodo';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null\n    };\n\n    this.isLoggedIn = () => {\n      return this.state.token !== null;\n    };\n\n    axios.defaults.baseURL = 'http://localhost:8000';\n  }\n\n  fetchToken(username, password) {\n    axios.post('/oauth/token/', {\n      grant_type: \"password\",\n      client_id: 2,\n      client_secret: NFAjDhC2pruCS3d9W2Ewfggavr5lsKFLbSyrSJrs,\n      username: username,\n      password: password\n    }).then(res => {\n      console.log(res);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      loggedIn: this.isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/todos\",\n      component: Todos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/todos/edit/:todo_id\",\n      component: EditTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      fetchToken: this.fetchToken,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      component: Register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/logout\",\n      component: Logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/:post_id\",\n      component: Post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/react_api_todo/todoapp/src/App.js"],"names":["React","Component","Todos","Navbar","BrowserRouter","Route","Switch","Home","Login","Register","Logout","Post","EditTodo","axios","App","constructor","props","state","token","isLoggedIn","defaults","baseURL","fetchToken","username","password","post","grant_type","client_id","client_secret","NFAjDhC2pruCS3d9W2Ewfggavr5lsKFLbSyrSJrs","then","res","console","log","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Todos from './components/Todos'\nimport Navbar from './components/Navbar'\nimport { BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Home from './components/Home'\nimport Login from './components/auth/Login'\nimport Register from './components/auth/Register'\nimport Logout from './components/auth/Logout'\nimport Post from './components/Post'\nimport EditTodo from './components/EditTodo'\nimport axios from 'axios'\n\n\nclass App extends Component {\n  state = {\n    token: null,\n  };\n  constructor(props) {\n    super(props);\n    axios.defaults.baseURL = 'http://localhost:8000';\n  }\n\n  isLoggedIn = () => {\n    return this.state.token !== null\n  }\n\n  fetchToken(username, password){\n    axios.post('/oauth/token/', {\n      grant_type: \"password\",\n      client_id: 2,\n      client_secret: NFAjDhC2pruCS3d9W2Ewfggavr5lsKFLbSyrSJrs,\n      username: username,\n      password: password\n    })\n    .then(res => {\n    console.log(res);\n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }\n  \n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App container\">\n          <Navbar loggedIn={this.isLoggedIn}/>\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/todos' component= {Todos} />\n            <Route path='/todos/edit/:todo_id' component= {EditTodo} />\n            <Route path='/login' component={Login} fetchToken={this.fetchToken}/>\n            <Route path='/register' component={Register} />\n            <Route path='/logout' component={Logout} />\n            <Route path='/:post_id' component={Post}/>\n          </Switch>\n\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}