{"ast":null,"code":"import _objectSpread from\"C:\\\\xampp\\\\htdocs\\\\react-lumen-todos\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var initState={token:localStorage.getItem('access_token')||null,isLoggedIn:localStorage.getItem('isLoggedIn')||false,loggedUser:localStorage.getItem('loggedUser')||null};var rootReducer=function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;if(action.type==='SET_TOKEN'){localStorage.setItem('access_token',action.token);localStorage.setItem('isLoggedIn',true);return _objectSpread(_objectSpread({},state),{},{token:action.token,isLoggedIn:true});}else if(action.type==='SET_USER'){localStorage.setItem('access_token',action.user);return _objectSpread(_objectSpread({},state),{},{user:action.user});}else if(action.type==='DESTROY_TOKEN'){localStorage.removeItem('access_token');localStorage.removeItem('isLoggedIn');localStorage.removeItem('loggedUser');return _objectSpread(_objectSpread({},state),{},{token:null,isLoggedIn:false,loggedUser:null});}else if(action.type==='DELETE_POST'){var newPosts=state.posts.filter(function(post){return post.id!==action.id;});return _objectSpread(_objectSpread({},state),{},{posts:newPosts});}return state;};export default rootReducer;","map":{"version":3,"sources":["C:/xampp/htdocs/react-lumen-todos/client/src/reducers/rootReducer.js"],"names":["initState","token","localStorage","getItem","isLoggedIn","loggedUser","rootReducer","state","action","type","setItem","user","removeItem","newPosts","posts","filter","post","id"],"mappings":"uKACA,GAAMA,CAAAA,SAAS,CAAG,CACdC,KAAK,CAAEC,YAAY,CAACC,OAAb,CAAqB,cAArB,GAAwC,IADjC,CAEdC,UAAU,CAAEF,YAAY,CAACC,OAAb,CAAqB,YAArB,GAAsC,KAFpC,CAGdE,UAAU,CAAEH,YAAY,CAACC,OAAb,CAAqB,YAArB,GAAsC,IAHpC,CAAlB,CAKA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAA+B,IAA9BC,CAAAA,KAA8B,2DAAtBP,SAAsB,IAAXQ,CAAAA,MAAW,2CAC/C,GAAGA,MAAM,CAACC,IAAP,GAAgB,WAAnB,CAAgC,CAE5BP,YAAY,CAACQ,OAAb,CAAqB,cAArB,CAAqCF,MAAM,CAACP,KAA5C,EACAC,YAAY,CAACQ,OAAb,CAAqB,YAArB,CAAmC,IAAnC,EACA,sCACOH,KADP,MAEIN,KAAK,CAAEO,MAAM,CAACP,KAFlB,CAGIG,UAAU,CAAE,IAHhB,GAKH,CATD,IAUK,IAAGI,MAAM,CAACC,IAAP,GAAgB,UAAnB,CAA+B,CAEhCP,YAAY,CAACQ,OAAb,CAAqB,cAArB,CAAqCF,MAAM,CAACG,IAA5C,EACA,sCACOJ,KADP,MAEII,IAAI,CAAEH,MAAM,CAACG,IAFjB,GAIH,CAPI,IAQA,IAAGH,MAAM,CAACC,IAAP,GAAgB,eAAnB,CAAoC,CAErCP,YAAY,CAACU,UAAb,CAAwB,cAAxB,EACAV,YAAY,CAACU,UAAb,CAAwB,YAAxB,EACAV,YAAY,CAACU,UAAb,CAAwB,YAAxB,EAEA,sCACOL,KADP,MAEIN,KAAK,CAAE,IAFX,CAGIG,UAAU,CAAE,KAHhB,CAIIC,UAAU,CAAE,IAJhB,GAMH,CAZI,IAaA,IAAGG,MAAM,CAACC,IAAP,GAAgB,aAAnB,CAAkC,CACnC,GAAII,CAAAA,QAAQ,CAAGN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYT,MAAM,CAACS,EAAvB,EAAvB,CAAf,CAEA,sCACOV,KADP,MAEIO,KAAK,CAAED,QAFX,GAIH,CAED,MAAON,CAAAA,KAAP,CACH,CA1CD,CA4CA,cAAeD,CAAAA,WAAf","sourcesContent":["\r\nconst initState = {\r\n    token: localStorage.getItem('access_token') || null,\r\n    isLoggedIn: localStorage.getItem('isLoggedIn') || false,\r\n    loggedUser: localStorage.getItem('loggedUser') || null,\r\n}\r\nconst rootReducer = (state = initState, action) => {\r\n    if(action.type === 'SET_TOKEN') {\r\n\r\n        localStorage.setItem('access_token', action.token);\r\n        localStorage.setItem('isLoggedIn', true);\r\n        return  {\r\n            ...state,\r\n            token: action.token,\r\n            isLoggedIn: true\r\n        }\r\n    }\r\n    else if(action.type === 'SET_USER') {\r\n\r\n        localStorage.setItem('access_token', action.user);\r\n        return  {\r\n            ...state,\r\n            user: action.user,\r\n        }\r\n    }\r\n    else if(action.type === 'DESTROY_TOKEN') {\r\n\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('isLoggedIn');\r\n        localStorage.removeItem('loggedUser');\r\n\r\n        return  {\r\n            ...state,\r\n            token: null,\r\n            isLoggedIn: false,\r\n            loggedUser: null\r\n        }\r\n    }\r\n    else if(action.type === 'DELETE_POST') {\r\n        let newPosts = state.posts.filter(post => post.id !== action.id);\r\n\r\n        return {\r\n            ...state,\r\n            posts: newPosts\r\n        }\r\n    }    \r\n\r\n    return state;\r\n}\r\n\r\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}