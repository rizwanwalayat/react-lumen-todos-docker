{"ast":null,"code":"const initState = {\n  token: localStorage.getItem('access_token') || null,\n  isLoggedIn: localStorage.getItem('isLoggedIn') || false,\n  posts: [{\n    id: 1,\n    title: \"Buy Milk 1\",\n    body: \"I am a very simple card. I am good at containing small bits of information.\"\n  }, {\n    id: 2,\n    title: \"Buy Milk 2\",\n    body: \"I am a very simple card. I am good at containing small bits of information.\"\n  }, {\n    id: 3,\n    title: \"Buy Milk 3\",\n    body: \"I am a very simple card. I am good at containing small bits of information.\"\n  }, {\n    id: 4,\n    title: \"Buy Milk 4\",\n    body: \"I am a very simple card. I am good at containing small bits of information.\"\n  }]\n};\n\nconst rootReducer = (state = initState, action) => {\n  if (action.type === 'SET_TOKEN') {\n    return { ...state,\n      token: action.token,\n      isLoggedIn: true\n    };\n  } else if (action.type === 'DESTROY_TOKEN') {\n    return { ...state,\n      token: null,\n      isLoggedIn: false\n    };\n  } else if (action.type === 'DELETE_POST') {\n    let newPosts = state.posts.filter(post => post.id !== action.id);\n    return { ...state,\n      posts: newPosts\n    };\n  }\n\n  return state;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/xampp/htdocs/react_api_todo/todoapp/src/reducers/rootReducer.js"],"names":["initState","token","localStorage","getItem","isLoggedIn","posts","id","title","body","rootReducer","state","action","type","newPosts","filter","post"],"mappings":"AACA,MAAMA,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,cAArB,KAAwC,IADjC;AAEdC,EAAAA,UAAU,EAAEF,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC,KAFpC;AAGdE,EAAAA,KAAK,EAAE,CACC;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,YAAf;AAA6BC,IAAAA,IAAI,EAAE;AAAnC,GADD,EAEC;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,YAAf;AAA6BC,IAAAA,IAAI,EAAE;AAAnC,GAFD,EAGC;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,YAAf;AAA6BC,IAAAA,IAAI,EAAE;AAAnC,GAHD,EAIC;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,YAAf;AAA6BC,IAAAA,IAAI,EAAE;AAAnC,GAJD;AAHO,CAAlB;;AAUA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGV,SAAT,EAAoBW,MAApB,KAA+B;AAC/C,MAAGA,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAAgC;AAE5B,WAAQ,EACJ,GAAGF,KADC;AAEJT,MAAAA,KAAK,EAAEU,MAAM,CAACV,KAFV;AAGJG,MAAAA,UAAU,EAAE;AAHR,KAAR;AAKH,GAPD,MAQK,IAAGO,MAAM,CAACC,IAAP,KAAgB,eAAnB,EAAoC;AACrC,WAAQ,EACJ,GAAGF,KADC;AAEJT,MAAAA,KAAK,EAAE,IAFH;AAGJG,MAAAA,UAAU,EAAE;AAHR,KAAR;AAKH,GANI,MAOA,IAAGO,MAAM,CAACC,IAAP,KAAgB,aAAnB,EAAkC;AACnC,QAAIC,QAAQ,GAAGH,KAAK,CAACL,KAAN,CAAYS,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAYK,MAAM,CAACL,EAA9C,CAAf;AAEA,WAAO,EACH,GAAGI,KADA;AAEHL,MAAAA,KAAK,EAAEQ;AAFJ,KAAP;AAIH;;AAED,SAAOH,KAAP;AACH,CA1BD;;AA4BA,eAAeD,WAAf","sourcesContent":["\r\nconst initState = {\r\n    token: localStorage.getItem('access_token') || null,\r\n    isLoggedIn: localStorage.getItem('isLoggedIn') || false,\r\n    posts: [\r\n            {id: 1, title: \"Buy Milk 1\", body: \"I am a very simple card. I am good at containing small bits of information.\"},\r\n            {id: 2, title: \"Buy Milk 2\", body: \"I am a very simple card. I am good at containing small bits of information.\"},\r\n            {id: 3, title: \"Buy Milk 3\", body: \"I am a very simple card. I am good at containing small bits of information.\"},\r\n            {id: 4, title: \"Buy Milk 4\", body: \"I am a very simple card. I am good at containing small bits of information.\"},\r\n    ]\r\n}\r\nconst rootReducer = (state = initState, action) => {\r\n    if(action.type === 'SET_TOKEN') {\r\n       \r\n        return  {\r\n            ...state,\r\n            token: action.token,\r\n            isLoggedIn: true\r\n        }\r\n    }\r\n    else if(action.type === 'DESTROY_TOKEN') {\r\n        return  {\r\n            ...state,\r\n            token: null,\r\n            isLoggedIn: false\r\n        }\r\n    }\r\n    else if(action.type === 'DELETE_POST') {\r\n        let newPosts = state.posts.filter(post => post.id !== action.id);\r\n\r\n        return {\r\n            ...state,\r\n            posts: newPosts\r\n        }\r\n    }    \r\n\r\n    return state;\r\n}\r\n\r\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}