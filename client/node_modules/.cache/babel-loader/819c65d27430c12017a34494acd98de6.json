{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react_api_todo\\\\todoapp\\\\src\\\\components\\\\auth\\\\Logout.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { destroyToken } from '../../actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass Logout extends Component {\n  componentDidMount() {\n    axios.post('/logout', '', {\n      headers: {\n        'Authorization': `Bearer ${this.props.token}`\n      }\n    }).then(res => {\n      this.props.destroyToken();\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('isLoggedIn');\n\n      /*#__PURE__*/\n      React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      });\n    }).catch(error => {\n      console.log(error);\n      this.props.destroyToken();\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('isLoggedIn');\n\n      /*#__PURE__*/\n      React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    destroyToken: () => {\n      dispatch(destroyToken());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);","map":{"version":3,"sources":["C:/xampp/htdocs/react_api_todo/todoapp/src/components/auth/Logout.js"],"names":["React","Component","axios","connect","destroyToken","Redirect","Logout","componentDidMount","post","headers","props","token","then","res","localStorage","removeItem","catch","error","console","log","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,QAAT,QAAwB,kBAAxB;;AAKA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAC3BM,EAAAA,iBAAiB,GAAE;AACfL,IAAAA,KAAK,CAACM,IAAN,CAAW,SAAX,EAAsB,EAAtB,EAA0B;AAAEC,MAAAA,OAAO,EAAE;AACjC,yBAAmB,UAAS,KAAKC,KAAL,CAAWC,KAAM;AADZ;AAAX,KAA1B,EAGGC,IAHH,CAGQC,GAAG,IAAI;AACX,WAAKH,KAAL,CAAWN,YAAX;AACAU,MAAAA,YAAY,CAACC,UAAb,CAAwB,cAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,YAAxB;;AACA;AAAA,0BAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KARH,EASGC,KATH,CASSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAKP,KAAL,CAAWN,YAAX;AACAU,MAAAA,YAAY,CAACC,UAAb,CAAwB,cAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,YAAxB;;AACA;AAAA,0BAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KAfH;AAgBH;;AAEDK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AA1B0B;;AA6B/B,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHX,IAAAA,KAAK,EAAEW,KAAK,CAACX;AADV,GAAP;AAGH,CAJD;;AAMA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHpB,IAAAA,YAAY,EAAE,MAAM;AAAEoB,MAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR;AAAyB;AAD5C,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport { destroyToken } from '../../actions/authActions'\r\nimport { Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        axios.post('/logout', '', { headers: {\r\n            'Authorization' : `Bearer ${this.props.token}`\r\n        }})\r\n          .then(res => {\r\n            this.props.destroyToken();\r\n            localStorage.removeItem('access_token');\r\n            localStorage.removeItem('isLoggedIn');\r\n            <Redirect to=\"/\" />\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            this.props.destroyToken();\r\n            localStorage.removeItem('access_token');\r\n            localStorage.removeItem('isLoggedIn');\r\n            <Redirect to=\"/\" />\r\n          })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        destroyToken: () => { dispatch(destroyToken())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout)\r\n"]},"metadata":{},"sourceType":"module"}